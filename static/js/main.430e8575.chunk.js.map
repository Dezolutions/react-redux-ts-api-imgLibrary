{"version":3,"sources":["components/Image.tsx","components/Images.tsx","redux/action.ts","components/Search.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["Image","largeImageURL","tags","user","React","useState","open","setOpen","handleClose","onClick","className","src","style","width","alt","GridListTileBar","title","subtitle","Dialog","onClose","Button","id","Images","images","useSelector","reducer","load","isLoading","console","log","CircularProgress","CSSTransition","in","timeout","GridList","cellHeight","cols","length","map","item","GridListTile","onInputChange","value","amount","dispatch","axios","get","then","data","setImages","hits","setTimeout","setLoading","type","payload","items","Search","useDispatch","setValue","setAmount","useEffect","minLength","debounceTimeout","onChange","e","target","placeholder","FormControl","InputLabel","Select","labelId","onOpen","event","MenuItem","size","variant","color","App","initialState","state","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.430e8575.chunk.js","sourcesContent":["import React from 'react'\r\nimport { GridListTileBar,Dialog,Button } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport '../css/image.css'\r\nimport {Timg} from '../types/types'\r\n\r\nconst Image = ({largeImageURL,tags,user}:Timg) => {\r\n  const [open,setOpen] = React.useState<boolean>(false)\r\n  \r\n  const handleOpen = ():void => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = ():void => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div onClick={handleOpen} className=\"img-item\" >\r\n        <img src={largeImageURL} style={{width: '100%'}} alt=\"\"/>\r\n        <GridListTileBar\r\n          title={tags}\r\n          subtitle={<span>by: {user}</span>}\r\n        />\r\n        \r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <img src={largeImageURL} alt=\"\"  />\r\n        <Button \r\n          onClick={handleClose}\r\n          id=\"img-close\"\r\n        ><CancelIcon/></Button>\r\n      </Dialog>\r\n      \r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {  GridList,GridListTile,CircularProgress } from '@material-ui/core';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Image from './Image'\r\nimport '../css/animation.css'\r\nimport {Tstate,Timg} from '../types/types'\r\n\r\nconst Images:React.FC = () => {\r\n  const images = useSelector((reducer:Tstate) => reducer.images)\r\n  const load = useSelector((reducer:Tstate) => reducer.isLoading)\r\n  console.log('render')\r\n\r\n  return (\r\n      <>  \r\n        {load ? <div className=\"circle\" ><CircularProgress  /></div> : false}\r\n        <CSSTransition in={!load} timeout={500} className=\"slide-up\" >\r\n          <GridList cellHeight={130}  cols={2} className=\"images-block\" >\r\n            {images.length \r\n              && images.map((item:Timg) => (\r\n              <GridListTile  key={item.id}><Image key={item.id} {...item}/></GridListTile>\r\n              ))\r\n            }\r\n          </GridList>\r\n        </CSSTransition>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Images\r\n","import axios from 'axios'\r\n\r\nexport const onInputChange = (value:string,amount:number) => (dispatch:any) => {\r\n  const apiKey = '14514672-c2dd62e4bfea0db355ae654da';\r\n  axios.get(`https://pixabay.com/api/?key=${apiKey}&q=${value}&image_type=photo&per_page=${amount}&safesearch=true`)\r\n    .then(({data}) =>  dispatch(setImages(data.hits)))\r\n    .then(() => setTimeout(() => dispatch(setLoading(false)),300))\r\n}\r\n\r\nexport const setLoading = (isLoading:boolean) => ({\r\n  type: 'LOADING',\r\n  payload: isLoading\r\n})\r\nexport const setImages = (items:any[]) => ({\r\n  type: 'SET_IMAGES',\r\n  payload: items\r\n})","import React from 'react'\r\nimport {Button,FormControl,InputLabel,Select,MenuItem } from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux'\r\nimport {onInputChange,setImages,setLoading} from '../redux/action'\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport '../css/search.css'\r\nconst Search:React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [value,setValue] = React.useState<string>('')\r\n  const [amount,setAmount] = React.useState<number>(7)\r\n  const [open, setOpen] = React.useState<boolean>(false)\r\n\r\n  React.useEffect(() => {\r\n    if(value.length){\r\n      dispatch(onInputChange(value,amount))\r\n      dispatch(setLoading(true))   \r\n    }\r\n  },[value,amount])\r\n\r\n  const onClear = ():void => {\r\n    dispatch(setImages([]))\r\n  };\r\n\r\n  const onFind = ():void => {\r\n    if(value.length){\r\n      dispatch(onInputChange(value,amount)) \r\n      dispatch(setLoading(true))   \r\n    }\r\n  };\r\n  const onSetValue = (e:React.ChangeEvent<HTMLInputElement>):void => {\r\n    setValue(e.target.value); \r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>):void => {\r\n    setAmount(event.target.value as number);\r\n  };\r\n\r\n  const handleClose = ():void => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = ():void => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"search-block\" >\r\n      <DebounceInput\r\n          className=\"search-input\"\r\n          minLength={2}\r\n          value={value}\r\n          debounceTimeout={450}\r\n          onChange={onSetValue}\r\n          placeholder=\"Введите название\" />\r\n        <FormControl   >\r\n          <InputLabel id=\"demo-controlled-open-select-label\">Amount</InputLabel>\r\n          <Select\r\n            labelId=\"demo-controlled-open-select-label\"\r\n            id=\"demo-controlled-open-select\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={amount}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={7} >7</MenuItem>\r\n            <MenuItem value={10}>10</MenuItem>\r\n            <MenuItem value={15}>15</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      \r\n      <Button onClick={onFind} size=\"small\" variant=\"contained\" color=\"primary\" id=\"search-btn\" >Find</Button>\r\n      <Button onClick={onClear} size=\"small\" variant=\"contained\"  id=\"search-btn\" >Clear</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\n\nimport Images from './components/Images';\nimport Search from './components/Search';\n\nconst App :React.FC = () =>{\n  return (\n    \n      <div className=\"app\">\n          <Search/>\n          <Images/>\n      </div>\n    \n  );\n}\n\nexport default App;\n","import {Tstate} from '../types/types'\r\nconst initialState : Tstate = {\r\n  images: [],\r\n  isLoading: false\r\n}\r\n\r\nconst reducer = (state = initialState,action:any) => {\r\n  switch (action.type) {\r\n    case 'SET_IMAGES': \r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      }\r\n    case 'LOADING': \r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  \n    <Provider store={store}>\n      <App />\n    </Provider>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}